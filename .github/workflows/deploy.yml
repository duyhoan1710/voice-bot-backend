name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # tslint:
  #   runs-on: self-host
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '14.0.0'
  #     - run: npm i
  #     - run: npm run lint

  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '14.0.0'
  #     - run: npm i
  #     - run: npm run test
  #   needs: tslint

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '14.0.0'

  #     - name: Login to github registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ secrets.ACTOR }}
  #         password: ${{ secrets.SECRET_TOKEN }}
  #     - run: echo "${{ secrets.ENV }}" > .env
  #     - run: npm run docker:build
  #     - run: npm run docker:push
    # needs: test

  deploy:
    runs-on: ubuntu-latest
    steps:    
      - uses: actions/checkout@v3
      - run: echo "${{ secrets.ENV }}" > .env

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.AWS_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.AWS_REMOTE_USER }}
          TARGET: ${{ secrets.AWS_REMOTE_TARGET }}
      
      - name: Rebuild server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_REMOTE_HOST }}
          username: ${{ secrets.AWS_REMOTE_USER }}
          key: ${{ secrets.AWS_SERVER_SSH_KEY }}
          script: |
            cd nestjs-api
            docker-compose down
            docker rmi ghcr.io/duyhoan1710/nestjs-api:1.0.0
            docker pull ghcr.io/duyhoan1710/nestjs-api:1.0.0
            docker-compose up -d
    # needs: build
