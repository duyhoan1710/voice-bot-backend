name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # tslint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '14.0.0'
  #     - run: npm i
  #     - run: npm run lint

  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '14.0.0'
  #     - run: npm i
  #     - run: npm run test
  #   needs: tslint

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '14.0.0'

  #     - name: Login to github registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.ACTOR }}
  #         password: ${{ secrets.SECRET_TOKEN }}
  #     - run: npm run docker:build
  #     - run: npm run docker:push
    # needs: test

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      - name: aws run docker-compose
        uses: peterkimzz/aws-ssm-send-command@master
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          instance-ids: ${{ secrets.AWS_INSTANCE_ID }}

          working-directory: /home/ubuntu/${{ secrets.AWS_REMOTE_TARGET }}
          command: ls -al
          comment: docker-compose up -d

      # - name: Deploy to server
      #   uses: easingthemes/ssh-deploy@main
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.AWS_SERVER_SSH_KEY }}
      #     REMOTE_HOST: ${{ secrets.AWS_REMOTE_HOST }}
      #     REMOTE_USER: ${{ secrets.AWS_REMOTE_USER }}
      #     TARGET: ${{ secrets.AWS_REMOTE_TARGET }}
    # needs: build
